<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.oioip.mapper.RoleMapper">
    <!--获取用户角色信息和权限信息-->
    <resultMap id="RoleAndPermission" type="role">
        <id property="id" column="id"></id>
        <result property="roleName" column="roleName"></result>
        <result property="roleDesc" column="roleDesc"></result>
        <collection property="permissions" ofType="permission" column="id" select="com.oioip.mapper.PermissionMapper.findPermissionByRoleId">
            <id property="id" column="id"></id>
            <result property="permissionName" column="permissionName"></result>
            <result property="url" column="url"></result>
        </collection>
    </resultMap>
    
    <!--获取角色权限列表与名下用户列表-->
    <resultMap id="PermissionsAndUsers" type="role">
        <id property="id" column="id"></id>
        <result property="roleName" column="roleName"></result>
        <result property="roleDesc" column="roleDesc"></result>
        <collection property="permissions" ofType="permission" column="id" select="com.oioip.mapper.PermissionMapper.findPermissionByRoleId">
        </collection>
        <collection property="users" ofType="userInfo" column="id" select="com.oioip.mapper.UserMapper.findUsersByRoleId">
        </collection>
    </resultMap>



    <!--
        根据用户ID获取角色信息和所属权限信息
    -->
    <select id="findRolesAndPermissionByUserId" resultMap="RoleAndPermission">
        select * from role where id in(select roleId from users_role where userId=#{userId})
    </select>

    <!--获取所有角色信息-->
    <select id="findAllRole" resultType="role">
        select * from role
    </select>

    <!--根据用户ID获取用户未拥有的角色信息-->
    <select id="findUserNoHaveRoleByUserId" resultType="role">
        SELECT * FROM role WHERE id NOT IN(SELECT roleId FROM users_role WHERE userId=#{userId} )
    </select>

    <select id="queryRolesByPermissionId" resultType="role">
        select * from role where id in(select roleId from role_permission where permissionId=#{permissionId})
    </select>

    <select id="findUserHaveRoleByUserId" resultType="role">
       SELECT * FROM role WHERE id IN(SELECT roleId FROM users_role WHERE userId=#{userId})
    </select>

    <insert id="addRoleToUser">
        insert into users_role values(#{userId},#{roleId})
    </insert>

    <delete id="delRoleToUser" >
        delete from users_role where userId=#{userId} and roleId=#{roleId}
    </delete>

    <insert id="saveRole" parameterType="role">
        insert into role values('a',#{roleName},#{roleDesc})
    </insert>

    <delete id="deleteRoleByRoleId">
        delete from role where id=#{roleId}
    </delete>
    
    <select id="queryRoleDetailsByRoleId" resultMap="PermissionsAndUsers">
        select * from role where id=#{roleId}
    </select>

    <insert id="addPermissionToRoleByPermissionIdAndRoleId">
        insert into role_permission values (#{pid},#{rid})
    </insert>

    <delete id="delPermissionToRoleByPermissionIdAndRoleId">
        delete from role_permission where permissionId=#{pid} and roleId=#{rid}
    </delete>

    <update id="updateRoleDetailsByRoleId">
        update role set roleName=#{role.roleName},roleDesc=#{role.roleDesc} where id=#{roleId}
    </update>

</mapper>